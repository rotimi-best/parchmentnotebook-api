Features

1. Add a prayer request
  - Start and End Date
  - Mark as answered
  - Add to a prayerlist

2. Manage prayerlist
  - Create a prayerlist
  - Rename the prayerlist
  - Delete the prayer list
  - Add prayers to that prayer list
  - Remove a prayer from that prayer list

3. Home page
  - View my prayer streaks
  - View my prayer points for today

How do I calculate prayer streaks?
- Get the streaks number from the user object

A) How to increment the streak?
  PUT /prayer/1
  Body - prayed: Boolean

  if (prayed === true) {
    if (user.lastDatePrayed === yesterday && user.lastDatePrayed !== today) {
      updateUser({ userId }, {
        lastDatePrayed: new Date(date()).getTime(), // today
        { $inc: { streak: 1 } }
      })
    }
  }

- When the user marks a prayer as prayed today, then
  - update user.lastDatePrayed

How do I calculate the prayer points for the day
const { startDate, endDate } = prayer;
const today = Date.now();

This means that today is within the startDate to endDate;
if (startDate <= today && endDate >= today) {

}

=================================================================
# Duplicating data in 2 collections and always updating each time
=================================================================
const student = {
  name: '',
  schools: [schoolId]
}

const school = {
  name: '',
  students: [studentId]
}
const existingSchool = {
  name: 'Excelency',
  students: [1,2,3,4]
}

Task: Update student given a new update as below:
const newStudent = {
  id: 1
  name: 'Tod Betley',
  schools: [1,2,3,4]
};

- Task a) Update the student model
- Task b) Update the school model

- Task a)
  updateStudent({ id: 1 }, newStudent)

- Task b)
- Get all schools with this usersId
- Loop through them and if they are not in the newStudent.schools,
then remove that student from that school else if they are found then don't
do anything else if they were not changed
  - for (const school from newStudent.schools) {

  }
  - student = getStudent({ id })
  -- If exists
  - if (student.schools.includes(globalSchoolId)) {
    updateStudent({ id }, {
      $pull: {
        schools: globalSchoolId
      }
    })
  } else {

  }